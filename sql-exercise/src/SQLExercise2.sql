CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE WORKER (
  WORKER_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
  FIRST_NAME CHAR(25),
  LAST_NAME CHAR(25),
  SALARY NUMERIC(15),
  JOINING_DATE DATETIME,
  DEPARTMENT CHAR(25)
);

-- inesrt data to worker
INSERT INTO WORKER 
  (FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
    ('Monika', 'Arora', 100000, '21-02-20 09:00:00', 'HR'),
    ('Niharika', 'Verma', 80000, '21-06-11 09:00:00', 'Admin'),
    ('Vishal', 'Singhal', 300000, '21-02-20 09:00:00', 'HR'),
    ('Mohan', 'Sarah', 300000, '12-03-19 09:00:00', 'Admin'),
    ('Amitabh', 'Singh', 500000, '21-02-20 09:00:00', 'Admin'),
    ('Vivek', 'Bhati', 490000, '21-06-11 09:00:00', 'Admin'),
    ('Vipul', 'Diwan', 200000, '21-06-11 09:00:00', 'Account'),
    ('Satish', 'Kumar', 75000, '21-01-20 09:00:00', 'Account'),
    ('Geetika', 'Chauhan', 90000, '21-04-11 09:00:00', 'Admin');
    
-- create table bonus
CREATE TABLE BONUS (
  WORKER_REF_ID INTEGER,
  BONUS_AMOUNT NUMERIC(10),
  BONUS_DATE DATETIME,
  FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID)
);

select * 
from WORKER;
-- TASK 1: INSERT DATA INTO TABLE BONUS
INSERT INTO BONUS
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(6, 32000, '2021-11-02'),
        (6, 20000, '2022-11-02'),
        (5, 21000, '2021-11-02'),
        (9, 30000, '2021-11-02'),
        (8, 4500, '2022-11-02')
;
        
-- TASK 2: 2ND HIGHEST SALARY AMONG ALL WORKER
WITH MAXSALARY AS (
	SELECT MAX(SALARY) AS THEHIGHEST
    FROM WORKER
)
SELECT MAX(W.SALARY)
FROM WORKER W, MAXSALARY MS
WHERE W.SALARY <> MS.THEHIGHEST
;

-- TASK 3: PRINT THE NAME OF THE EMPLOYEES HAVING THE HIGHEST SALARY IN EACH DEPARTMENT
-- SELF JOIN AFTER FIND THE 

SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS NAME, SALARY
FROM WORKER W1,
(SELECT MAX(SALARY) AS MAXSALARY, DEPARTMENT
FROM WORKER
GROUP BY DEPARTMENT) MAXSALARY_INEACHDEPT
WHERE W1.SALARY = MAXSALARY_INEACHDEPT.MAXSALARY
AND W1.DEPARTMENT = MAXSALARY_INEACHDEPT.DEPARTMENT
;

-- TASK 4: FETCH THE LIST OF EMPLOYEES WITH THE SAME SALARY
SELECT W1.FIRST_NAME, W1.LAST_NAME, W1.SALARY
FROM WORKER W1,
(SELECT SALARY FROM WORKER
GROUP BY SALARY
HAVING COUNT(SALARY) > 1) AS WITH_SAME_SALARY
WHERE W1.SALARY = WITH_SAME_SALARY.SALARY
;

-- TASK 5: WORKER NAME WITH SALARIES + BONUS IN 2021
SELECT W.FIRST_NAME, W.LAST_NAME, W.SALARY, B.BONUS_AMOUNT
FROM WORKER W LEFT JOIN BONUS B ON W.WORKER_ID = B.WORKER_REF_ID
WHERE WORKER_REF_ID IS NOT NULL
AND YEAR(BONUS_DATE) = 2021
;

-- TASK 6: DELETE ALL THE RECORDS IN TABLE WORKER
DELETE FROM WORKER;
-- QUESTION: STUDY THE REASON WHY THE DATA CANNOT BE DELETED
-- ANSWER: BECAUSE OTHER TABLE ALREADY SET A COLUMN FROM WORKER AS FOREIGN KEY
-- THEREFORE, UNLESS DELETE ALL DATA FROM BONUS (OR OTHER TABLE THAT ALSO SET A COLUMN FROM WORKER AS FOREIGN KEY)
-- OTHERWISE CANNOT DELETE FROM WORKER

-- TASK 7: DROP TABLE WORKER
DROP TABLE WORKER;
-- QUESTION: STUDY THE REASON WHY THE TABLE CANNOT BE DROPPED
-- ANSWER: BECAUSE THERE ARE TABLE HAD SET A COLUMN ON WORKER AS FOREIGN KEY
-- UNLESS ALL OF THESE KIND OF TABLE HAS BEEN DROPPED
-- THEN YOU CAN DROP WORKER 