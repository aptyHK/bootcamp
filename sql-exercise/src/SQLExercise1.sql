USE SQLEXERCISE;
CREATE TABLE REGIONS (
	REGION_ID INTEGER NOT NULL,
    REGION_NAME VARCHAR(25),
    PRIMARY KEY(REGION_ID)
);

CREATE TABLE COUNTRIES (
	COUNTRY_ID CHAR(2) NOT NULL,
    COUNTRY_NAME VARCHAR(40),
    REGION_ID INTEGER NOT NULL,
    PRIMARY KEY(COUNTRY_ID),
    FOREIGN KEY(REGION_ID) REFERENCES REGIONS(REGION_ID)
);

CREATE TABLE LOCATIONS (
	LOCATION_ID INTEGER NOT NULL,
    STREET_ADDRESS VARCHAR(25),
    POSTAL_CODE VARCHAR(12),
    CITY VARCHAR(30),
    STATE_PROVINCE VARCHAR(12),
    COUNTRY_ID CHAR(2) NOT NULL,
    PRIMARY KEY(LOCATION_ID),
    FOREIGN KEY(COUNTRY_ID) REFERENCES COUNTRIES(COUNTRY_ID)
);

CREATE TABLE DEPARTMENTS (
	DEPARTMENT_ID INTEGER NOT NULL,
    DEPARTMENT_NAME VARCHAR(30),
    MANAGER_ID INTEGER,
    LOCATION_ID INTEGER,
    PRIMARY KEY(DEPARTMENT_ID),
    FOREIGN KEY(LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID)
);

CREATE TABLE JOB (
	JOB_ID VARCHAR(10) NOT NULL,
    JOB_TITLE VARCHAR(35),
    MIN_SALARY NUMERIC(10, 2),
    MAX_SALARY NUMERIC(10, 2),
    PRIMARY KEY(JOB_ID)
);

CREATE TABLE JOB_HISTORY (
	EMPLOYEE_ID INTEGER NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    JOB_ID VARCHAR(20),
    DEPARTMENT_ID INTEGER,
    PRIMARY KEY(EMPLOYEE_ID, START_DATE),
    FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID),
    FOREIGN KEY(JOB_ID) REFERENCES JOB(JOB_ID)
);

CREATE TABLE EMPLOYEES (
	EMPLOYEE_ID INTEGER NOT NULL,
	FIRST_NAME VARCHAR(20),
    LAST_NAME VARCHAR(25),
    EMAIL VARCHAR(25),
    PHONE_NUMBER VARCHAR(20),
    HIRE_DATE DATE,
    JOB_ID VARCHAR(10) NOT NULL,
    SALARY NUMERIC(10,2),
    COMMISSION_PCT NUMERIC(3),
    MANAGER_ID INTEGER,    
    DEPARTMENT_ID INTEGER NOT NULL,
    PRIMARY KEY(EMPLOYEE_ID),
    FOREIGN KEY(EMPLOYEE_ID) REFERENCES JOB_HISTORY(EMPLOYEE_ID),
    FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID),
    FOREIGN KEY(JOB_ID) REFERENCES JOB(JOB_ID)
);

CREATE TABLE JOB_GRADES (
	GRADE_LEVEL VARCHAR(2),
    LOWEST_SAL NUMERIC(10, 2),
    HIGHEST_SAL NUMERIC(10, 2),
    PRIMARY KEY(GRADE_LEVEL)
);

INSERT INTO REGIONS VALUES (1, 'Europe');
INSERT INTO REGIONS VALUES (2, 'Asia');
INSERT INTO REGIONS VALUES (3, 'North America');

INSERT INTO COUNTRIES VALUES ('DE', 'Germany', '1');
INSERT INTO COUNTRIES VALUES ('IT', 'Italy', '1');
INSERT INTO COUNTRIES VALUES ('JP', 'Japan', '3');
INSERT INTO COUNTRIES VALUES ('US', 'United State', '2');

# INSERT INTO LOCATION (LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID)
INSERT INTO LOCATIONS (LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, COUNTRY_ID) VALUES ('1000', '1297 Via Cola di Rie', '989', 'Roma', 'IT');
INSERT INTO LOCATIONS (LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, COUNTRY_ID) VALUES ('1100', '93091 Calle della Te', '10934', 'Venice', 'IT');
INSERT INTO LOCATIONS VALUES ('1200', '2017 Shinjuku-ku', '1689', 'Tokyo', 'TokyoPrefect', 'JP');
INSERT INTO LOCATIONS VALUES ('1400', '201 Jabberwocky Rd', '26192', 'Southlake', 'Texas', 'US');

INSERT INTO DEPARTMENTS VALUES ('10', 'Administration', '200', '1100');
INSERT INTO DEPARTMENTS VALUES ('20', 'Marketing', '201', '1200');
INSERT INTO DEPARTMENTS VALUES ('30', 'Purchasing', '202', '1400');

INSERT INTO JOB VALUES ('IT_PROG', 'SMALL POTATO A', '6000', '50000');
INSERT INTO JOB VALUES ('MK_REP', 'SMALL POTATO B', '5000', '40000');
INSERT INTO JOB VALUES ('ST_CLERK', 'SMALL POTATO C', '4000', '30000');

INSERT INTO JOB_HISTORY VALUES ('102', '1993-01-13', '1998-07-24', 'IT_PROG', 20);
INSERT INTO JOB_HISTORY VALUES ('101', '1989-09-21', '1998-10-27', 'MK_REP', 10);
INSERT INTO JOB_HISTORY VALUES ('101', '1993-10-28', '1997-03-15', 'MK_REP', 30);
INSERT INTO JOB_HISTORY VALUES ('100', '1996-02-17', '1999-12-19', 'ST_CLERK', 30);
INSERT INTO JOB_HISTORY VALUES ('103', '1998-03-24', '1999-12-31', 'MK_REP', 20);

INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) VALUES ('100', 'Steven', 'King', 'SKING', '515-1234567', '1987-06-17', 'ST_CLERK', '24000.00', '0.00', 109, 10);
INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) VALUES ('101', 'Neena', 'Kochhar', 'NKOCHHAR', '515-1234568', '1987-06-18', 'MK_REP', '17000.00', '0.00', '103', '20');
INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) VALUES ('102', 'Lex', 'De Haan', 'LDEHAAN', '515-1234569', '1987-06-19', 'IT_PROG', '17000.00', '0.00', '108', '30');
INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) VALUES ('103', 'Alexander', 'AHUNOLD', 'SKING', '590-4234567', '1987-06-20', 'MK_REP', '9000', '0.00', '105', '20');

-- QUESTION 3
SELECT L.LOCATION_ID, L.STREET_ADDRESS, L.STATE_PROVINCE, C.COUNTRY_NAME
FROM LOCATIONS L, COUNTRIES C
WHERE L.COUNTRY_ID = C.COUNTRY_ID;

-- QUESTION 4
SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID
FROM employees
GROUP BY EMPLOYEE_ID;

-- QUESTION 5
SELECT e.FIRST_NAME, e.LAST_NAME, e.JOB_ID, e.DEPARTMENT_ID
FROM employees e, departments d, locations l
WHERE e.DEPARTMENT_ID = d.DEPARTMENT_ID
AND d.LOCATION_ID = l.LOCATION_ID
AND l.COUNTRY_ID = 'JP';

-- Question 6
-- EMPLOYEE ID, LAST NAME ALONG WITH THERE MANAGER ID AND LAST NAME
SELECT E2.EMPLOYEE_ID, E2.LAST_NAME
FROM EMPLOYEES E1, EMPLOYEES E2
WHERE E1.EMPLOYEE_ID = E2.MANAGER_ID;

-- QUESTION 7
WITH CHECKLEXHIREDATE AS (
	SELECT HIRE_DATE AS LEXHIREDATE
    FROM EMPLOYEES
    WHERE FIRST_NAME = 'Lex' and LAST_NAME = 'De Haan'
)
SELECT e.FIRST_NAME, e.LAST_NAME, e.HIRE_DATE
FROM EMPLOYEES e, CHECKLEXHIREDATE c
WHERE e.HIRE_DATE > LEXHIREDATE;

-- Question 8
SELECT D.DEPARTMENT_NAME, COUNT(1) AS NUMBER_OF_EMPLOYEE
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID;

-- Question 9
SELECT JH.EMPLOYEE_ID, J.JOB_TITLE, DATEDIFF(JH.END_DATE, JH.START_DATE)
FROM JOB J, JOB_HISTORY JH
WHERE J.JOB_ID = JH.JOB_ID
AND JH.DEPARTMENT_ID = 30; 

-- Question 10
-- department name, manager name, city, country name
# INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) 
# VALUES ('201', 'MANAGER', 'MARKETING', 'MMARKET', '323-878787', '1988-08-18', 'MK_REP', '88800.00', '0.00', 999, 10); 
SELECT D.DEPARTMENT_NAME, CONCAT(E.FIRST_NAME, ' ', E.LAST_NAME) AS MANAGER_NAME, L.CITY, C.COUNTRY_NAME
FROM DEPARTMENTS D 
LEFT JOIN EMPLOYEES E ON D.MANAGER_ID = E.EMPLOYEE_ID
LEFT JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
LEFT JOIN COUNTRIES C ON L.COUNTRY_ID = C.COUNTRY_ID
;

-- Question 11
SELECT D.DEPARTMENT_ID, ROUND(SUM(SALARY) / COUNT(1), 2) AS AVERAGE_SALARY
FROM DEPARTMENTS D, EMPLOYEES E
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_ID

-- Question 12
-- 1. REMOVE MIN_SALARY AND MAX_SALARY FROM JOBS
-- 2. ADD NEW COLUMN GRADE LEVEL ON JOBS, SET IT AS FOREIGN KEY AND REFERENCE FROM JOB_GRADES(GRADE_LEVEL)
